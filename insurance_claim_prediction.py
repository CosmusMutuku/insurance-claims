# -*- coding: utf-8 -*-
"""Insurance_claim_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13i63dUr2a5Hh7QIqV2ONUGfXcmw587Qj

# Analytics Vidhya-InsuranceClaims Predictions
     Done by: Jeniffer Mukami
         Cosmus Mutuku

<a id="cont"></a>

## Table of Contents
<a href=#one>1. Introduction</a>

- <a href=#two>1.1 Overview</a>

- <a href=#two>1.2 Problem Statement</a>

<a href=#two>2. Comet Experiment</a>

<a href=#three>3. Loading Dependencies</a>

- <a href=#two>3.1 Import the libraries</a>

- <a href=#four>3.2 loading the data</a>

- <a href=#four>3.3 Data description and Summary Statistics </a>

<a href=#four>4. Exploratory Data Analysis</a>

<a href=#five>5. Modeling</a>

<a href=#six>6. Performance Evaluation</a>

<a href=#seven>7. Data Engineering</a>

<a href=#eight>8. Best Model Explanation</a>

- <a href=#eight>8.1 Zindi submission</a>

<a href=#nine>9. Conclusion</a>

<a id="one"></a>
## 1. Introduction
<a class="anchor" id="1.1"></a>
<a href=#cont>Back to Table of Contents</a>

Predict whether the policyholder will file a claim in the next 6 months or not.

### Overview

An insurance policy is an agreement between a company and a customer by which a company undertakes to provide a guarantee of compensation for specified loss, damage or illness in return for the payment of a specified premium. A premium is a sum of money that the customer needs to pay regularly to an insurance company for this guarantee.

For example, you pay a premium of Rs. 3000/- each year for car insurance with a coverage of Rs. 100,000/-. Unfortunately, in case of an accident, the car is severely damaged. In that case, the insurance provider company will bear the cost of damage etc. for up to Rs. 100,000.

Now if you are wondering how can a company bear such a high cost when it charges a premium of only Rs. 3000/- per year only i.e. where the concept of probability comes into the picture. For example, there might be thousands of customers who would be paying a premium of Rs. 3000 every year just like you, but only a few of them (say 2-3) would have had an accident that year and not everyone. This way everyone shares the risk of everyone else.

Our client is an Insurance company that provides insurance for cars to its customers. In this hackathon, you will be closely working with the insurer in understanding the behaviour of the policyholders.

### Problem Statement

CarIns is a startup that provides insurance for cars. It is one of the best car insurance brands known for the highest claim settlement ratio. It was launched back in Oct 2020 and acquired its initial policyholders by providing a hassle-free claim process, instant policy issuance, and claim settlements at minimum coverages.


As it's a fast growing startup, the company would like to optimize the cost of the insurance by identifying the policyholders who are more likely to claim in the next 6 months.

Now the company would like to use Data Science to identify the policyholders whose chances of filing a claim are high in the next 6 months. The company challenges the Data Science community to build a high-performance algorithm to predict if the policyholder will file a claim in the next 6 months or not based on the set of car and policy features.

<a id="three"></a>
## 3. Loading Dependencies
<a class="anchor" id="1.1"></a>
<a href=#cont>Back to Table of Contents</a>

### Import the libraries
"""

# Libraries for data loading, data manipulation and data visulisation

import matplotlib.pyplot as plt
from matplotlib import rc
from matplotlib.axes._axes import _log as matplotlib_axes_logger
matplotlib_axes_logger.setLevel('ERROR')
import seaborn as sns

# Libraries for data preparation and model building
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from statsmodels.graphics.correlation import plot_corr
from scipy import stats
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error

"""### Loading the data"""

test= pd.read_csv('test_zo1G9sv.csv')
train = pd.read_csv('train_qWM28Yl.csv')

"""__About The Dataset__

You are provided with information on policyholders containing the attributes like policy tenure, age of the car, age of the car owner, population density of the city, make and model of the car, power, engine type, etc and the target variable indicating whether the policyholder files a claim in the next 6 months or not.

__Data Dictionary__

You are provided with 3 files - train.csv, test.csv, and sample_submission.csv

__Train and Test Set__

The train and test set contains information about different insurance policy holders. The train set includes the target variable **is_claim** whereas in the test set, you need to predict the target variable **is_claim**.

__Variables Explanation__

![WhatsApp%20Image%202022-11-13%20at%209.12.09%20AM%20%281%29.jpeg](attachment:WhatsApp%20Image%202022-11-13%20at%209.12.09%20AM%20%281%29.jpeg)

![WhatsApp%20Image%202022-11-13%20at%209.13.10%20AM.jpeg](attachment:WhatsApp%20Image%202022-11-13%20at%209.13.10%20AM.jpeg)

### Summary Statistics

**Train data**
"""

display(train.head(3))

display(train.info())

print(train.isnull().sum())

train['is_claim'].value_counts()

#0.0 means no claim and 1.0 means there will be claim

#Number of clusters
train['area_cluster'].value_counts()

# Rows containing duplicate data
duplicate= train[train.duplicated()]
print("number of duplicate rows:", duplicate.shape)

#Datatypes
train.dtypes

"""**Test data**"""

# View test data info, shape and content
display(test.head(3))
display(test.info())
print(test.isnull().sum())



"""<a id="three"></a>
## 4. Exploratory Data Analysis (EDA)
<a class="anchor" id="1.1"></a>
<a href=#cont>Back to Table of Contents</a>
"""

#plotting a heat map to check the level of correlation
heatmap = sns.heatmap(train.corr(), vmin=-1, vmax=1, annot=True)
sns.set(rc = {'figure.figsize':(20, 15)})
heatmap.set_title('Correlation Heatmap for the Numerical features', fontdict={'fontsize':22}, pad=20);

"""##Data Engineering

##Modelling
"""